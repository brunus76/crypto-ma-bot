DEPLOY TO CLOUD RUN

gcloud builds submit --tag gcr.io/YOUR_PROJECT_ID/crypto-bot
gcloud run deploy crypto-bot \
  --image gcr.io/YOUR_PROJECT_ID/crypto-bot \
  --platform managed \
  --region us-central1 \
  --allow-unauthenticated


OPTIONAL: Add Scheduler

gcloud scheduler jobs create http crypto-job \
  --schedule "*/5 * * * *" \
  --uri https://YOUR_CLOUD_RUN_URL \
  --http-method GET


BIGQUERY EXAMPLE
SELECT signal, COUNT(*) FROM trades GROUP BY signal;
SELECT AVG(price) FROM trades WHERE signal = 'BUY';


BigQuery Setup

# Create dataset
bq mk crypto_bot

# Create table
bq mk --table crypto_bot.trades \
  trade_time:TIMESTAMP,product:STRING,price:FLOAT,signal:STRING


üîê Google Secret Manager
bash
echo -n "API_KEY" | gcloud secrets create coinbase-api-key --data-file=-
# Repeat for secret + passphrase

üöÄ Run on GCP
bash
gcloud builds submit --tag gcr.io/YOUR_PROJECT_ID/crypto-ma-bot
gcloud run deploy crypto-ma-bot --image gcr.io/YOUR_PROJECT_ID/crypto-ma-bot --platform managed

üìä Run Backtests
bash
python app/backtest/run_all_backtests.py

üìÑ Generate Report
bash
open app/backtest/results/full_report.html

üìâ Connect to Looker Studio
	‚Ä¢	Source: crypto_bot.trades table (in BigQuery)
	‚Ä¢	Build charts by product, signal, price, etc.

‚∏ª

üì¨ Contributions

PRs welcome! See CONTRIBUTING.md.

---

### ‚úÖ TO DO NEXT

- [ ] Create the repo: `crypto-ma-bot` (or I can give you a zipped folder to push)
- [ ] Add your actual API keys via Google Secret Manager
- [ ] Enable BigQuery + Scheduler + Run APIs
- [ ] Deploy via `gcloud` CLI or GitHub Actions

---

**a.** Want a zipped project folder ready to push to GitHub?  
**b.** Want to add a CLI command interface (`argparse`) or Streamlit UI for one-click run and charts?


